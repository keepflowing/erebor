services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "80:80"
    depends_on:
      - backend

  backend: 
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - DB_HOST=postgres
      - DB_USER=${DB_U}
      - DB_PASSWORD=${DB_P}
      - DB_NAME=${DB}
      - DB_PORT=5432
    depends_on:
      - postgres
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"] #todo endpoint
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 25s

  postgres:
    image: postgres:15-alpine
    container_name: postgres-db
    env_file:
      .env
    environment:
      POSTGRES_DB: ${DB}
      POSTGRES_USER: ${DB_U}
      POSTGRES_PASSWORD: ${DB_P}
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_U} -d ${DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    
volumes:
  postgres-data:
    driver: local
